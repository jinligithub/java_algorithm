
编程题一
https://www.nowcoder.com/questionTerminal/02d8d42b197646a5bbd0a98785bb3a34

A,B,C三个人是好朋友,每个人手里都有一些糖果,我们不知道他们每个人手上具体有多少个糖果,但是我们知道以下的信息：
A - B, B - C, A + B, B + C. 这四个数值.每个字母代表每个人所拥有的糖果数.
现在需要通过这四个数值计算出每个人手里有多少个糖果,即A,B,C。这里保证最多只有一组整数A,B,C满足所有题设条件。 
输入描述:
输入为一行，一共4个整数，分别为A - B，B - C，A + B，B + C，用空格隔开。 范围均在-30到30之间(闭区间)。
输出描述:
输出为一行，如果存在满足的整数A，B，C则按顺序输出A，B，C，用空格隔开，行末无空格。 如果不存在这样的整数A，B，C，则输出No

import java.util.Scanner;
public class Main{
    public  static  void  main(String[] args){
        Scanner in =new Scanner(System.in);
        int y1,y2,y3,y4;
        float a,b,c;
        while(in.hasNextInt()){
            y1=in.nextInt();
            y2=in.nextInt();
            y3=in.nextInt();
            y4=in.nextInt();
            a=(y1+y3)/2f;
            b=(y2+y4)/2f;
            c=(y4-y2)/2f;
            if(a-((y1+y3)/2)!=0){
                System.out.println("NO");
                return;
            }
            if(((b-(y2+y4)/2)!=0)&&((b-(y3-y1)/2)!=0)){
                System.out.println("NO");
                return;
            }
             if(c-(y4-y2)/2!=0){
                 System.out.println("NO");
                 return;
             }
               System.out.println((int)a+" "+(int)b+" "+(int)c);
        }
    }
}

方法总结：根据题目的约束条件，进行计算
把题目条件用方程式表示：
A-B=Y1;
B-C=Y2;
A+B=Y3;
B+C=Y4;

用消元法求解：
A=(Y1+Y3)/2;
B=(Y3-Y1)/2=(Y2+Y4)/2;
C=(Y4-Y2)/2;

方法说明：
hasNextInt（）:该方法是判断控制台是否接收的是数字，如果接受的是数字会用nextInt()方法 接收值，在进行判断操作
Scanner 的next(),nextInt(),nextLine()方法
next()方法 ：该方法一定要读取到有效字符后才可以结束输入，对于游戏字符之前的空格换行，next()方法会自动将其去掉，只有输入后效数字后才将其后边的空格或换行作为季结束符。它不能得到带空格的字符串。
nextInt()方法：该方法也把空格所谓结束符，但是他只读数字，
nextLine()方法：改方法的结束符只是换行，即该方法返回Enter键之前的所有字符，他可以得到带空格的字符串。

练习二：
https://www.nowcoder.com/questionTerminal/eac8c671a0c345b38aa0c07aba40097b

输入n个整数，输出出现次数大于等于数组长度一半的数。 
输入描述:
每个测试输入包含 n个空格分割的n个整数，n不超过100，其中有一个整数出现次数大于等于n/2。
输出描述:
输出出现次数大于等于n/2的数。

代码：
import java.util.Scanner;
public class Main{
    public static  void main(String[] args){
        Scanner scanner= new Scanner(System.in);
        String string=scanner.nextLine();
        String[] strings=string.split(" ");
        int s=strings.length/2;
        for(int i=0;i<strings.length;i++){
            int sum=0;
            for(int j=0;j<strings.length;j++){
                if(strings[i].equals(strings[j])){
                    sum++;
                }
            }
            if(sum>=s){//当这个数字大于数组总长度的一半时，，该数字就是要找的数字
                System.out.println(strings[i]);
                break;
            }
        }
        
    }
}
方法总结：
把所有读到的数字，用split方法用空格将其分开，再放到一个strings[]数组里。利用两两层循环，第一层循环是拿出这个数和第二层里面的数据进行比较，相同了计数器加一，一次循环完成后，回合数组长度/2进行比较，如
果大于数组长度的一半，说明就找到了
